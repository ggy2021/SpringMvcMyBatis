<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns:context="http://www.springframework.org/schema/context"
xmlns:mvc="http://www.springframework.org/schema/mvc"
xmlns:jdbc="http://www.springframework.org/schema/jdbc"
xmlns:jee="http://www.springframework.org/schema/jee"
xmlns:aop="http://www.springframework.org/schema/aop"
xmlns:tx="http://www.springframework.org/schema/tx"
xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context.xsd
http://www.springframework.org/schema/mvc
http://www.springframework.org/schema/mvc/spring-mvc.xsd
http://www.springframework.org/schema/tx
http://www.springframework.org/schema/tx/spring-tx.xsd
http://www.springframework.org/schema/aop
http://www.springframework.org/schema/aop/spring-aop.xsd">

	
	 
	<!-- 加载数据库连接的资源文件 -->
	<!-- <context:property-placeholder location="classpath:jdbc.properties"/> -->
	 <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
	 	<property name="locations"> <!-- PropertyPlaceholderConfigurer类中有个locations属性，接收的是一个数组，即我们可以在下面配好多个properties文件 -->
	 		<array>
	 			<value>classpath:system.properties</value>
	 		</array>
	 	</property>
	 </bean>
	<!-- 配置数据源   dbcp数据库连接池 -->
	<!-- JDBC Data Source. It is assumed you have MySQL running on localhost
    port 3306 with username root and blank password. Change below if it's not
    the case -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
	    <property name="driverClassName" value="${jdbc.driver}"/>
	    <!-- 基本属性 url、user、password -->
	    <property name="url" value="${jdbc.url}"/>
	    <property name="username" value="${jdbc.username}"/>
	    <property name="password" value="${jdbc.password}"/>
	
	    <!-- 配置初始化大小、最小、最大 -->
	    <property name="initialSize" value="1"/>
	    <property name="minIdle" value="1"/>
	    <property name="maxActive" value="20"/>
	
	    <!-- 配置获取连接等待超时的时间 -->
	    <property name="maxWait" value="60000"/>
	
	    <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
	    <property name="timeBetweenEvictionRunsMillis" value="60000"/>
	
	    <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
	    <property name="minEvictableIdleTimeMillis" value="300000"/>
	
	    <property name="validationQuery" value="SELECT 1 from dual"/>
	    <property name="testWhileIdle" value="true"/>
	    <property name="testOnBorrow" value="false"/>
	    <property name="testOnReturn" value="false"/>
    </bean>
	
	<!-- 配置sqlSessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
	    <!-- 数据库连接池 -->
	    <property name="dataSource" ref="dataSource"/>
	    <!-- 加载Mybatis全局配置文件 -->
	    <property name="configLocation" value="classpath:sqlMapConfig.xml"/>
	</bean>
	
	<!-- 配置mapper扫描器 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
	    <!-- 扫描包路径，如果需要扫描多个包中间用半角逗号隔开 -->
	    <property name="basePackage" value="com.cn.ggy"></property>
	    <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
	</bean>
	<!-- 事务控制  对MyBatis操作数据库  spring使用JDBC事务控制类 -->
	
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	    <!-- 配置数据源 -->
	    <property name="dataSource" ref="dataSource"/>
	</bean>
    
    <!-- 通知 -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <!-- 传播行为 -->
            <tx:method name="save*" propagation="REQUIRED"/>
            <tx:method name="insert*" propagation="REQUIRED"/>
            <tx:method name="update*" propagation="REQUIRED"/>
            <tx:method name="delete*" propagation="REQUIRED"/>
            <tx:method name="find*" propagation="SUPPORTS" read-only="true"/>
            <tx:method name="select*" propagation="SUPPORTS" read-only="true"/>
            
            
        </tx:attributes>
    </tx:advice>
    
    <!-- 配置aop  -->
    <!-- <aop:config>
        <aop:advisor advice-ref="txAdvice" pointcut="execution(* com.wxisme.ssm.service.impl.*.*(..))"/>
    </aop:config> -->

</beans>